# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these export UAV_TYPE=f450;
#pre_window: export RUN_TYPE=simulation; export UAV_TYPE=x500; export PLATFORM_CONFIG=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml; export CUSTOM_CONFIG=./config/custom_config.yaml; export WORLD_CONFIG=./config/world_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml; export SENSORS="garmin_down"
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=x500
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - rosbridge:
      layout: tiled
      panes:
        - waitForRos; roslaunch rosbridge_server rosbridge_websocket.launch
  - gazebo:
      layout: tiled
      panes:
        #- waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=fire3 gui:=true
        #- waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE   --pos 0 0 0 0 --enable-rangefinder --enable_bluefox_camera --enable-ground-truth"
        #- waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --pos 0 0 0.5 0 --enable-rangefinder --enable-ground-truth --enable-bluefox-camera"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "2 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "3 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 0 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "4 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 0 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "5 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 -5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "6 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 -5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "7 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 -10 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "8 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 -10 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "9 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 -15 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "10 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 -15 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "11 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos -10 -20 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "12 --$UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-bluefox-camera  --pos 10 -20 0 0"


  - status:
      layout: tiled
      panes:
        #- waitForHw; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        -  export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav2; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav3; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav4; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav5; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav6; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav7; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav8; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav9; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav10; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav11; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav12; waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav5; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav6; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav7; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav8; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav9; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav10; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav11; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav12; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav5; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav6; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav7; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav8; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav9; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav10; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav11; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav12; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav3; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav4; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav5; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav6; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav7; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav8; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav9; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav10; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav11; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7
        - export UAV_NAME=uav12; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard ; sleep 10; rosservice call /$UAV_NAME/control_manager/goto_altitude 7

  #- path:
   #   layout: even-vertical
   #   panes:
   #     - 'history -s ./plan_path.py'
   #     - 'waitForControl; read; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2.0; rosservice call /$UAV_NAME/hw_api/offboard'
   #     - 'history -s rosservice call /uav1/control_manager/goto_trajectory_start'
   #     - 'history -s rosservice call /uav1/control_manager/start_trajectory_tracking'
  #- layout:
  #    layout: tiled
  #    panes:
  #      - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
